<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wiki on Xuanwo&#39;s Blog</title><link>https://xuanwo.io/tags/wiki/</link><description>Recent content in Wiki on Xuanwo&#39;s Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 07 Jul 2014 00:38:09 +0000</lastBuildDate><atom:link href="https://xuanwo.io/tags/wiki/index.xml" rel="self" type="application/rss+xml"/><item><title>使用Hexo构建项目Wiki</title><link>https://xuanwo.io/2014/07/07/use-hexo-to-bulid-project-wiki/</link><pubDate>Mon, 07 Jul 2014 00:38:09 +0000</pubDate><guid>https://xuanwo.io/2014/07/07/use-hexo-to-bulid-project-wiki/</guid><description>&lt;p&gt;七七事件前一天，我有幸加入了&lt;a href=&#34;https://github.com/cugbacm/oj&#34;&gt;本校OJ2.0&lt;/a&gt;项目组。非常高兴能够为我们学校自己的OJ开源项目做出一份贡献，虽然只是一份整理Wiki的小活儿，但是这是我第一次真正的参与一个源项目。经过谨慎考虑之后，我决定项目的Wiki使用Github Pages来构建。&lt;/p&gt;
&lt;h1 id=&#34;为什么是github-pages&#34;&gt;为什么是Github Pages？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;免费，无限流量&lt;/li&gt;
&lt;li&gt;享受git的版本管理功能，不用担心文章遗失。&lt;/li&gt;
&lt;li&gt;你只要用自己喜欢的编辑器写文章就可以了，其他事情一概不用操心，都由github处理。
&lt;em&gt;以上引用自&lt;a href=&#34;http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html&#34;&gt;阮一峰先生的相关博文&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;同Github Wiki一样支持多人协作，但是更加便于查阅，特别是在涉及主题繁杂的时候。&lt;/li&gt;
&lt;li&gt;比Github Wiki拥有更大的控制权限，避免Wiki被错误操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;前期准备&#34;&gt;前期准备&lt;/h1&gt;
&lt;h2 id=&#34;hexo的安装与配置&#34;&gt;Hexo的安装与配置&lt;/h2&gt;
&lt;h3 id=&#34;windows环境下&#34;&gt;Windows环境下&lt;/h3&gt;
&lt;p&gt;32位地址:&lt;a href=&#34;http://nodejs.org/dist/v0.10.29/node-v0.10.29-x86.msi&#34;&gt;http://nodejs.org/dist/v0.10.29/node-v0.10.29-x86.msi&lt;/a&gt;
64位地址:&lt;a href=&#34;http://nodejs.org/dist/v0.10.29/x64/node-v0.10.29-x64.msi&#34;&gt;http://nodejs.org/dist/v0.10.29/x64/node-v0.10.29-x64.msi&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;mac-os环境下&#34;&gt;Mac OS环境下&lt;/h3&gt;
&lt;p&gt;安装包地址:&lt;a href=&#34;http://nodejs.org/dist/v0.10.29/node-v0.10.29.pkg&#34;&gt;http://nodejs.org/dist/v0.10.29/node-v0.10.29.pkg&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;linux环境下&#34;&gt;Linux环境下&lt;/h3&gt;
&lt;p&gt;建议使用&lt;code&gt;nvm&lt;/code&gt;来管理nodejs环境
1. 打开终端，输入&lt;code&gt;wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh&lt;/code&gt;
2. 重启终端之后,输入&lt;code&gt;nvm ls&lt;/code&gt;，则会列出所有的可用版本
3. 输入&lt;code&gt;nvm install 0.10.29&lt;/code&gt;（此处以最新版为例）
4. 下面配置nodejs的环境，分别输入&lt;code&gt;nvm use 0.10.29&lt;/code&gt;以及&lt;code&gt;nvm alias default 0.10.29&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;git的安装与配置&#34;&gt;Git的安装与配置&lt;/h2&gt;
&lt;h3 id=&#34;windows环境下-1&#34;&gt;Windows环境下&lt;/h3&gt;
&lt;p&gt;不妨使用Github For Windows， 通过添加命令行参数启动环境，无须配置PATH，完全绿色化。（TODO：有待补充）&lt;/p&gt;
&lt;h3 id=&#34;mac-os环境下-1&#34;&gt;Mac OS环境下&lt;/h3&gt;
&lt;p&gt;同理，使用Github For Mac即可。&lt;/p&gt;
&lt;h3 id=&#34;linux环境下-1&#34;&gt;Linux环境下&lt;/h3&gt;
&lt;p&gt;Ubuntu, Debian：&lt;code&gt;sudo apt-get install git-core&lt;/code&gt;
Fedora, Red Hat, CentOS：&lt;code&gt;sudo yum install git-core&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;开启ssh-避免重复输入帐号密码&#34;&gt;开启SSH，避免重复输入帐号密码&lt;/h3&gt;
&lt;p&gt;可以参考&lt;a href=&#34;http://xuanwo.io/2015/02/07/generate-a-ssh-key/&#34;&gt;此处&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&#34;wiki配置&#34;&gt;Wiki配置&lt;/h1&gt;
&lt;p&gt;感谢&lt;a href=&#34;http://www.hahack.com/&#34;&gt;wzpan&lt;/a&gt;开源的主题，其实还是我主动索要的- -，幸好他非常热情地提供了帮助，在此表示衷心的感谢。
致谢完毕，下面转入配置的细节。
1. 在github上建立一个新的仓库，名为&lt;code&gt;yourname.github.io&lt;/code&gt;
2. 事先建立好准备存放wiki的文件夹，然后在当前目录下打开终端（或者不停地cd进入），然后输入&lt;code&gt;hexo init&lt;/code&gt;，初始化。
3. 然后输入&lt;code&gt;npm install&lt;/code&gt;，自动下载相关的依赖包，此时一个最基本的框架已经构建完毕了。
4. 然后输入&lt;code&gt;git clone https://github.com/wzpan/hexo-theme-wixo.git themes/wixo&lt;/code&gt;，下载wiki用的主题。
5. 然后修改&lt;code&gt;_config.yml&lt;/code&gt;中的&lt;code&gt;theme&lt;/code&gt;条目为&lt;code&gt;wixo&lt;/code&gt;，注意&lt;code&gt;theme&lt;/code&gt;后有一个空格。
&amp;gt;
补充一下关于&lt;code&gt;deploy&lt;/code&gt;的设置
同样是在_config.yml文件夹中，修改&lt;code&gt;deploy&lt;/code&gt;的部分为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deploy:
type: github
repo: repository url //使用之前创建的那个库，建议使用SSH
branch: branch //Hexo会自动识别个人wiki还是项目wiki
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;p&gt;6. 进入source文件夹，打开_post文件夹，新建一个md文档，在文档的开头加入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: your title //这将会是wiki文档的标题
date: 2014-03-16 10:17:16 //构建时间，wiki中用不到
categories: Docs //这将会是本文档所属的类别
toc: true //默认开启，生成table of contents
--- //不可省略，敲回车后，下面的内容就自由发挥了～
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;p&gt;7. 保存文档后，返回wiki所在文件夹， 输入&lt;code&gt;hexo d -g&lt;/code&gt;，此时wiki已经自动生成并上传完毕了。&lt;/p&gt;
&lt;h1 id=&#34;协作注意事项&#34;&gt;协作注意事项&lt;/h1&gt;
&lt;h2 id=&#34;项目创建者&#34;&gt;项目创建者&lt;/h2&gt;
&lt;p&gt;按照上述设置，&lt;code&gt;wiki&lt;/code&gt;默认保存在&lt;code&gt;yourname.github.io&lt;/code&gt;的&lt;code&gt;master&lt;/code&gt;分支下。建议另外开启一个&lt;code&gt;source&lt;/code&gt;分支，用来将整个wiki文件夹上传，方便多地编辑以及同步协作。
&amp;gt;
一开始可能会发现wiki文件夹不能使用git管理，这是因为主题wixo是使用git管理的。所以在上传wiki文件夹之前，要删除位于wixo文件夹下的.git文件夹。&lt;/p&gt;
&lt;h2 id=&#34;项目参与者&#34;&gt;项目参与者&lt;/h2&gt;
&lt;p&gt;让项目创建者在项目的settings中的Collaborators栏目中输入自己的用户名，即可获得对这个项目的控制权。
环境配置完毕后，fork&lt;code&gt;source&lt;/code&gt;分支，即可开始编辑工作。根据&lt;code&gt;.gitignore&lt;/code&gt;文件的不同，可能还需要进行&lt;code&gt;npm install&lt;/code&gt;以解决依赖问题。&lt;/p&gt;
&lt;h1 id=&#34;更新日志&#34;&gt;更新日志&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;2014年07月07日 完成&lt;code&gt;前言&lt;/code&gt;和&lt;code&gt;为什么&lt;/code&gt;板块&lt;/li&gt;
&lt;li&gt;2014年07月24日 完成&lt;code&gt;前期准备&lt;/code&gt;和&lt;code&gt;Wiki配置&lt;/code&gt;以及&lt;code&gt;注意事项&lt;/code&gt;版块，接下来完成免PATH配置的详细步骤以及SSH的配置。此外发现步骤有些混杂不清，下一个版本中将进行修正。&lt;/li&gt;
&lt;li&gt;2015年04月01日 添加了SSH配置。&lt;/li&gt;
&lt;/ul&gt;</description></item></channel></rss>