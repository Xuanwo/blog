<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rollover Live on Xuanwo&#39;s Blog</title><link>https://xuanwo.io/series/rollover-live/</link><description>Recent content in Rollover Live on Xuanwo&#39;s Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 13 May 2019 01:00:00 +0000</lastBuildDate><atom:link href="https://xuanwo.io/series/rollover-live/index.xml" rel="self" type="application/rss+xml"/><item><title>翻车实况第 2 期</title><link>https://xuanwo.io/2019/05/13/rollover-2nd/</link><pubDate>Mon, 13 May 2019 01:00:00 +0000</pubDate><guid>https://xuanwo.io/2019/05/13/rollover-2nd/</guid><description>&lt;blockquote&gt;
&lt;p&gt;这文档里面都说过的事情，哪能算翻车！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;fcitx-快捷键与-rime-冲突&#34;&gt;fcitx 快捷键与 rime 冲突&lt;/h2&gt;
&lt;p&gt;从很久之前开始就隐隐感觉 fcitx 和 rime 中间有些微妙的不对付，具体现象是使用 &lt;code&gt;L Shift&lt;/code&gt; 切换中英文之后会出现 rime 在中英文间疯狂切换导致无法正常输入。以前一直都是重新 Deploy 一下 rime 将就一下，直到有一天终于忍不住了，在 Archlinuxcn 的群里问了一下，&lt;a href=&#34;https://t.me/archlinuxcn_group/1397962&#34;&gt;传送门&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;rime.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;哦吼，有位群友指出 rime 和 fcitx 都有自己的中英文切换键，所以在默认配置下会出现快捷键的冲突。后来我按照群友的指示把 fcitx 的快捷键关掉，只用 rime 的切换（因为我只需要输入中文和英文，而且我只有 rime 这一个输入法）。&lt;/p&gt;
&lt;p&gt;果然好了！困扰了我大半年的毛病十秒钟就被解决了= =&lt;/p&gt;
&lt;h2 id=&#34;tmux-2-9-配置变更&#34;&gt;tmux 2.9 配置变更&lt;/h2&gt;
&lt;p&gt;前一段时间 tmux 上了 2.9，导致 &lt;code&gt;window-status-bg&lt;/code&gt;，&lt;code&gt;message-fg&lt;/code&gt; 这种常用的配置参数都失效了。&lt;/p&gt;
&lt;p&gt;tmux 的 CHANGES 文件中有提到如何迁移： &lt;a href=&#34;https://github.com/tmux/tmux/blob/master/CHANGES#L89-L90&#34;&gt;https://github.com/tmux/tmux/blob/master/CHANGES#L89-L90&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* The individual -fg, -bg and -attr options have been removed; they
were superseded by -style options in tmux 1.9.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;具体的来说就是把形如 &lt;code&gt;status-bg colour235&lt;/code&gt; 的参数替换为 &lt;code&gt;status-style bg=colour235&lt;/code&gt;，比如&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set-option -g status-bg colour235
set-option -g status-fg colour136
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;替换为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set-option -g status-style fg=colour136,bg=colour235
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我在用的主题是 &lt;a href=&#34;https://github.com/seebi/tmux-colors-solarized&#34;&gt;tmux-colors-solarized&lt;/a&gt;，已经有人贡献了一个修复 tmux 2.9 兼容的 &lt;a href=&#34;https://github.com/seebi/tmux-colors-solarized/pull/23&#34;&gt;PR&lt;/a&gt;，其他主题参考一下即可。&lt;/p&gt;
&lt;h2 id=&#34;go-get-failed&#34;&gt;go get failed&lt;/h2&gt;
&lt;p&gt;有一天用 go get 去访问托管在自建的 gitea 的时候突然发现会出现这样的报错：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:) go get git.xuanwo.io/let-go-mod-happy/logrus
package git.xuanwo.io/let-go-mod-happy/logrus: unrecognized import path &amp;quot;git.xuanwo.io/let-go-mod-happy/logrus&amp;quot; (https fetch: Get https://git.xuanwo.io/let-go-mod-happy/logrus?go-get=1: x509: certificate signed by unknown authority)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一开始感觉有点奇怪，因为浏览器访问是正常的，随后用 curl 测试了一下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:) curl https://git.xuanwo.io/let-go-mod-happy/logrus -v
* Trying xxx.xxx.xxx.xxx...
* TCP_NODELAY set
* Connected to git.xuanwo.io (xxx.xxx.xxx.xxx) port 443 (#0)
* ALPN, offering h2
* ALPN, offering http/1.1
* successfully set certificate verify locations:
* CAfile: /etc/ssl/certs/ca-certificates.crt
CApath: none
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
* TLSv1.3 (IN), TLS handshake, Server hello (2):
* TLSv1.2 (IN), TLS handshake, Certificate (11):
* TLSv1.2 (OUT), TLS alert, unknown CA (560):
* SSL certificate problem: unable to get local issuer certificate
* Closing connection 0
curl: (60) SSL certificate problem: unable to get local issuer certificate
More details here: https://curl.haxx.se/docs/sslcerts.html
curl failed to verify the legitimacy of the server and therefore could not
establish a secure connection to it. To learn more about this situation and
how to fix it, please visit the web page mentioned above.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;emmmm，&lt;code&gt;unknown CA&lt;/code&gt;，这可能跟我的 nginx 的 SSL 配置有关。检查了一下果然如此：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssl_certificate /etc/nginx/certs/git.xuanwo.io/cert;
ssl_certificate_key /etc/nginx/certs/git.xuanwo.io/key;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我配置的证书并不是完整的链，所以导致 TLS 在握手的时候失败了，将选用的证书修改为 fullchain 即可。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssl_certificate /etc/nginx/certs/git.xuanwo.io/fullchain;
ssl_certificate_key /etc/nginx/certs/git.xuanwo.io/key;
&lt;/code&gt;&lt;/pre&gt;</description></item><item><title>翻车实况第 1 期</title><link>https://xuanwo.io/2019/02/19/rollover-1st/</link><pubDate>Tue, 19 Feb 2019 06:00:00 +0000</pubDate><guid>https://xuanwo.io/2019/02/19/rollover-1st/</guid><description>&lt;blockquote&gt;
&lt;p&gt;今天翻车了吗？翻了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本次翻车的主角是我小老婆：ThinkPad X1 Carbon，在之前的&lt;a href=&#34;https://xuanwo.io/2018/05/16/thinkpad-x1-carbon-6th/&#34;&gt;开箱手记&lt;/a&gt;曾经爆过照片。用了几个月都没有什么太大的问题，但是自从我春节回家一趟之后，我的 x1 开始了它的频频翻车之旅 = =&lt;/p&gt;
&lt;h2 id=&#34;大江苏魔法伤害&#34;&gt;大江苏魔法伤害&lt;/h2&gt;
&lt;p&gt;春节回家之后，电脑就一直放在透气性不大好的背包里面。拿出来的时候发现整个电脑的表面都有一层薄薄的水汽，甚至还能找到一点微妙的水墨画的感觉：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;water.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;想着 ThinkPad 种种键盘洒水问题不大的传说，我完全没有把这点水汽当回事。打开电脑，连上网络，&lt;code&gt;yay&lt;/code&gt; 一把梭。发现内核升级了，随手重启一下，结果翻车了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;failed-to-start.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这还是我第一次遇到这样的问题，从报错上来看应该跟我的更新没有关系，可能是硬盘有了一些奇怪的问题，中间有些 IO 全部失败了，导致好多服务都起不来了。虽然觉得纳闷，但是还是觉得先重启一下看看，确认一下是否稳定复现。结果问题更加严重了，在滴的一声之后，我的电脑完全没有引导，直接进入了空白的 Boot Menu 页：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;empty-boot.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;噫，这是我整个硬盘都挂掉了的节奏啊。当我准备掏出 archiso 看看还没有救的时候，有人找我有事情，于是我把电脑合上走开了。半个小时回来之后，按下电源键，电脑居然直接正常启动了 = =，我拿着 U 盘一脸懵逼。发生了什么？难道刚才启动不了是因为在启动的一瞬间，硬盘进入了量子态？放置 play 了一会儿之后，它又自己回来了？薛定谔的硬盘？？？&lt;/p&gt;
&lt;p&gt;稍微琢磨了一下之后，把问题归咎于江苏水汽比较重，电脑长期放在包里面，导致里面的某些部件出现了问题，在开放环境放了一会儿之后就自己好了。（不管你信不信，反正我信了）&lt;/p&gt;
&lt;h2 id=&#34;帝都的静电攻击&#34;&gt;帝都的静电攻击&lt;/h2&gt;
&lt;p&gt;我天真的以为翻车事件已经结束了，然而轮胎打滑通常只是真正车祸的前奏（&lt;/p&gt;
&lt;p&gt;返工的第二天，我普通的起床、普通的上班、普通的进入办公室、普通的坐下、普通的升级系统、普通的重启、普通的接上显示器，普通的，等一下！我的显示器咋不亮了！在那一瞬间，我的大脑瞬间渲染出无数剧情： &lt;em&gt;电脑坏了，送去维修，错过用户大单，被公司开除，孤单一人行走在冬夜空档的大街上，发誓再也不滚系统了。。。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;摇摇头，开始仔细研究发生了什么。&lt;/p&gt;
&lt;p&gt;显卡是 Intel 提供的集成显卡，驱动用的是 Kernel Mode Setting。正常情况下如果我接上了外接显示器，kernel 会响应并接管这个设备的显示，就像下面这个图一样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;kms.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;每个显示输出设备的连接状态都会都会保存为一个形如 &lt;code&gt;/sys/class/drm/card0-HDMI-A-1/status&lt;/code&gt; 的文件，archwiki 上提供了一个命令来查看电脑上所有输出设备的状态：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt; p in /sys/class/drm/*/status; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#bb60d5&#34;&gt;con&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#70a0d0;font-style:italic&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#bb60d5&#34;&gt;p&lt;/span&gt;%/status&lt;span style=&#34;color:#70a0d0;font-style:italic&#34;&gt;}&lt;/span&gt;; &lt;span style=&#34;color:#007020&#34;&gt;echo&lt;/span&gt; -n &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#70a0d0;font-style:italic&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#bb60d5&#34;&gt;con&lt;/span&gt;#*/card?-&lt;span style=&#34;color:#70a0d0;font-style:italic&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;: &amp;#34;&lt;/span&gt;; cat &lt;span style=&#34;color:#bb60d5&#34;&gt;$p&lt;/span&gt;; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;done&lt;/span&gt;
DP-1: disconnected
DP-2: disconnected
eDP-1: connected
HDMI-A-1: disconnected
HDMI-A-2: disconnected&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看出来，除了内置的显示屏 &lt;code&gt;eDP-1&lt;/code&gt; 没问题之外，其他的接口都是断开状态的，尽管我的线已经接上去了。噫，照这么看，我的 HDMI 和 Type-C 口都凉了啊，难道只能送修了么？&lt;/p&gt;
&lt;p&gt;不要放弃治疗，可能是显示器坏了呢！我把同事的电脑拿过来插上发现没有问题；而我的电脑接他的显示器则同样是显示不出来。凉了？不，我还不能就这样放弃治疗，说不定是底裤 D 升级的时候又搞崩了什么东西呢？我选择回滚了一波 systemd，重启，奇迹没有发生。说不定是内核有问题呢？我选择回滚了一波内核，重启，奇迹仍然没有发生。我叹了口气，果然，玄学是不存在的，我的电脑凉了。&lt;/p&gt;
&lt;p&gt;我都已经放弃治疗准备送修了，我的朋友 P 坚持让我搞个 PE 什么的看看，说不定接口还没坏。反正也不差那么几分钟，为了让我朋友，更为了让我自己死心，我觉得再进行最后一次尝试。我掏出了我的 Archiso 插上，开机，插上 HDMI 线，卧槽，显示器亮了！接口没坏！&lt;/p&gt;
&lt;p&gt;这可真是&lt;code&gt;踏破铁鞋无觅处，柳暗花明又一村&lt;/code&gt;，我感到自己的人生再次充满了希望，我的大脑中再次闪过无数画面：&lt;em&gt;电脑修好了，完成了后端大规模重构，性能提升 150%，成为了年度优秀员工，找到了三次元老婆，走向人生巅峰。。。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;咳咳咳，冷静。现在的情况是已经排除了是硬件问题，我决定通过 Archlinux Rollback Machine 把电脑回滚到昨天。拔掉 U 盘，开机，我鬼使神差的把线直接接到了电脑上，卧槽，显示器亮了！所以说，既不是硬件问题，也不是软件问题？那还能是啥问题，人品问题么？&lt;/p&gt;
&lt;p&gt;emmmmmm，仔细想了一下，我觉得不如解释成静电问题，插上 USB 的时候释放掉了机器内部的静电，然后所有的接口都恢复正常了。（不管你信不信，反正我是真的信了）&lt;/p&gt;
&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;
&lt;p&gt;以上就是本次的翻车实录~&lt;/p&gt;
&lt;h2 id=&#34;引用资料&#34;&gt;引用资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kernel.org/doc/html/v4.15/gpu/drm-kms.html&#34;&gt;Kernel Mode Setting (KMS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/kernel_mode_setting#Forcing_modes&#34;&gt;Kernel mode setting - Archwiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description></item></channel></rss>